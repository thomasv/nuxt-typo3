(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{356:function(t,e,s){t.exports=s.p+"assets/img/redirects.693a476a.svg"},370:function(t,e,s){"use strict";s.r(e);var a=s(44),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"redirects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redirects"}},[t._v("#")]),t._v(" Redirects")]),t._v(" "),a("p",[t._v("Redirects are handled based on custom API response:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"redirectUrl"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/newUrl"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"statusCode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"issue-with-native-redirects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#issue-with-native-redirects"}},[t._v("#")]),t._v(" Issue with native redirects")]),t._v(" "),a("p",[t._v("There is no way to handle redirects in the universal way.")]),t._v(" "),a("h2",{attrs:{id:"client-side"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#client-side"}},[t._v("#")]),t._v(" Client side")]),t._v(" "),a("p",[t._v("On the client side browsers follow redirect for XHR or fetch automatically - from the frontend perspective we are not aware about the redirect. We can receive only "),a("code",[t._v("200 OK")]),t._v(" status code, but we don't know what was the full trace of the request.")]),t._v(" "),a("h3",{attrs:{id:"what-is-the-issue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-issue"}},[t._v("#")]),t._v(" What is the issue ?")]),t._v(" "),a("p",[t._v("We have the same url path after we get "),a("code",[t._v("200 OK")]),t._v(" with the new content from the redirected page:")]),t._v(" "),a("h3",{attrs:{id:"example-scenario"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-scenario"}},[t._v("#")]),t._v(" Example scenario:")]),t._v(" "),a("ol",[a("li",[t._v("You are already on the page")]),t._v(" "),a("li",[t._v('Click "About us" link with '),a("code",[t._v("about-us")]),t._v(" url")]),t._v(" "),a("li",[t._v("App call API "),a("code",[t._v("headless/about-us")]),t._v(" to get the page")]),t._v(" "),a("li",[t._v("API returns"),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("statusCode:")]),t._v(" 307\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("location:")]),t._v(" /headless/about-us/contact\n")])])])]),t._v(" "),a("li",[t._v("Browser follows the "),a("code",[t._v("/headless/about-us/contact")]),t._v(" and return new content")]),t._v(" "),a("li",[t._v("In the Browser URL bar we can see old url "),a("code",[t._v("/headless/about-us")]),t._v(" - becase we are not aware of the redirect")])]),t._v(" "),a("p",[t._v("So in that case we would have to detect redirect and setup new url path for the new page - "),a("code",[t._v("about-us/contact")]),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"server-side"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#server-side"}},[t._v("#")]),t._v(" Server Side")]),t._v(" "),a("p",[t._v("On the SSR context we would have to return the new page URL without API path in the url.")]),t._v(" "),a("h3",{attrs:{id:"example-scenario-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-scenario-2"}},[t._v("#")]),t._v(" Example scenario:")]),t._v(" "),a("ol",[a("li",[t._v("Enter the page "),a("code",[t._v("http://mysite.com/about-us")])]),t._v(" "),a("li",[t._v("APP call the API in the node context "),a("code",[t._v("headless/about-us")])]),t._v(" "),a("li",[t._v("API returns"),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("statusCode:")]),t._v(" 307\n"),a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("location:")]),t._v(" /headless/about-us/contact\n")])])])]),t._v(" "),a("li",[t._v("APP in the node context see "),a("code",[t._v("statusCode")]),t._v(" and "),a("code",[t._v("location")])]),t._v(" "),a("li",[t._v("APP in the node context make redirect to "),a("code",[t._v("location")]),t._v(" header")]),t._v(" "),a("li",[t._v("Browser get the new page with "),a("code",[t._v("/headless/about-us/contact")]),t._v(" - but this is the API endpoint, not frontend page")])]),t._v(" "),a("p",[t._v("So in that case we would have to detect new url in step 4 and strip "),a("code",[t._v("headless")]),t._v(" API path from the URL - or API should return new URL without "),a("code",[t._v("headless")]),t._v(" part - but this is more complex because for the client side we should get "),a("code",[t._v("headless")]),t._v(" in the url to call API correct.")]),t._v(" "),a("h3",{attrs:{id:"typo3-headless-way"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typo3-headless-way"}},[t._v("#")]),t._v(" TYPO3 Headless way")]),t._v(" "),a("p",[t._v("The API response for the page that should be redirected should returns follow response:")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"redirectUrl"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/newUrl"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"statusCode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("So in that case we can handle it in universal way on the response level.\nOn the SSR "),a("code",[t._v("nuxt")]),t._v(" provides "),a("code",[t._v("redirect")]),t._v(" method to make redirect in node context.\nOn the client side we can use just "),a("code",[t._v("location.href")]),t._v(" to replace current url.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("redirect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("301")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redirectUrl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" window "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undefined'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("redirectUrl\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"diagram"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diagram"}},[t._v("#")]),t._v(" Diagram")]),t._v(" "),a("p",[a("img",{attrs:{src:s(356),alt:"redirects"}})])])}),[],!1,null,null,null);e.default=r.exports}}]);